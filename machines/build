#!/usr/bin/bash

# Detect arch
get_arch() {
    local arch=$(uname -m)
    case $arch in
        aarch64|arm64) echo "arm64" ;;
        x86_64) echo "amd64" ;;
        *) echo "unsupported" ;;
    esac
}

ARCH=$(get_arch)

# get paths for script
SD=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
# generate root password to enable login
PASSWORD=creator
# store password for console command to display prior to entering container
echo $PASSWORD>$SD/.passwd
# generate a rootfs with systemd and dbus enabled for debian stable
debootstrap --include=systemd,dbus stable $SD/debian
# append important additional directives in shell startup for Go and other 
# handy things
cat $SD/bash.bashrc >> $SD/debian/etc/bash.bashrc
# set up the rootfs with essential tools used by the other containers
systemd-nspawn --pipe -q -D $SD/debian /usr/bin/bash << EOF
	apt -y full-upgrade
	apt -y install wget micro
	wget https://go.dev/dl/go1.23.6.linux-${ARCH}.tar.gz
	tar xvf go1.23.6.linux-${ARCH}.tar.gz
	mv go /usr/local/
	echo -e "$PASSWORD\n$PASSWORD" | passwd
EOF

rm -rf $SD/debian/var/cache/apt/archives/*

mkdir -p /etc/systemd/nspawn

mkdir -p /srv/strfry

mkdir -p /srv/haproxy

mkdir -p /srv/mysql

mkdir -p /srv/relaycreator

# build each image
cd strfry
./install
cd ..

cd haproxy
./install
cd ..

cd mysql
./install
cd ..

cd relaycreator
./install
cd ..

cd keys-certs-manager
./install
cd ..

echo "image install complete"

machinectl list-images